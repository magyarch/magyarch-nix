# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.
gaps outer 6
gaps inner 8

set $mod Mod4
set $altmod Mod1

# Basic definition #######################################################################

for_window [class="^.*"] border pixel 3
#for_window [class="^"] split toggle

### Variables

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term kitty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu dmenu_path | dmenu_run | xargs swaymsg exec --
font pango:JetBrains Mono Nerd Font 9

### Output configuration
#
# Default wallpaper (more resolutions are available in /run/current-system/sw/share/backgrounds/sway/)
output * bg /run/current-system/sw/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+q kill

    # Start your launcher
    bindsym $mod+d exec wofi --conf=$HOME/.config/wofi/config

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+Escape reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+x exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
     exec_always --no-startup-id /nix/store/$(ls -la /nix/store | grep 'mate-polkit' | grep '4096' | awk '{print $9}' | sed -n '$p')/libexec/polkit-mate-authentication-agent-1 &
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
  set $ws1 "1: WWW.. ‚ò¢Ô∏è"
set $ws2 "2: Chat ü§¨"
set $ws3 "3: Editor ‚öíÔ∏è"
set $ws4 "4: Music üç≠"
set $ws5 "5: Steam üé≤"
set $ws6 "6: Video üé¨"
set $ws7 "7: Trans üî∞"
set $ws8 "8: Vifm üóÉÔ∏è"
set $ws9 "9: Spotify üìÄ"
set $ws10 "10: Terminals üéØ"

# example for dual monitors

#set $monitor1 "DP-0"
#set $monitor2 "HDMI-0"

#workspace $ws1 output $monitor1
#workspace $ws2 output $monitor2
#workspace $ws3 output $monitor1
#workspace $ws4 output $monitor1
#workspace $ws5 output $monitor1
#workspace $ws6 output $monitor1
#workspace $ws7 output $monitor1
#workspace $ws8 output $monitor1
#workspace $ws9 output $monitor1

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+odiaeresis workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+odiaeresis move container to workspace number $ws10

# for my 4k resolution
for_window [class="Pinentry"] sticky enable
for_window [class="sent"] border pixel 0px
for_window [title="GIMP Startup"] move workspace $ws5
for_window [class="Gimp"] move workspace $ws5
for_window [title="^QEMU$"] floating enable
for_window [window_role="GtkFileChooserDialog"] resize set 1680 1020
for_window [window_role="GtkFileChooserDialog"] move position center
for_window [title="Default - Wine desktop"] floating enable
for_window [class="(?i)Pavucontrol|mupdf|sxiv|feh"] floating enable, resize set 1680 1020, move position center, focus
for_window [class="(?i)mpv"] floating enable, resize set 1680 1020, move position center, focus
for_window [title="Music"] floating enable, resize set 1680 1020, move position center, focus
for_window [title="scratchpad"] floating enable, resize set 1680 1020, move position center, focus
for_window [class="Lxappearance|system-config-printer|System-config-printer.py"] floating enable, resize set 1680 1020, move position center, focus


for_window [title="float"] floating enable, resize set 1680 1020, move position center, focus
for_window [title="floating"] floating enable, resize set 1680 1020, move position center, focus

for_window [window_role="pop-up"] floating enable
for_window [window_role="task_dialog"] floating enable



# Assign application to workspace ####################################################

for_window [class="$BROWSER|Brave-browser|Microsoft-edge|firefox"] move to workspace $ws1 focus
for_window [class="urxvt|st|qBittorrent"] move to workspace $ws7 focus
for_window [class="subl|Subl|Subl3|subl3"] move to workspace $ws3 focus
for_window [class="discord|Discord"] move to workspace $ws2 focus
for_window [class="steam|Steam"] move to workspace $ws5 focus
#for_window [class="transmission-gtk|Transmission-gtk"] move to workspace $ws5 focus
for_window [class="mpv|Mpv"] move to workspace $ws6 focus
for_window [class="virtualbox|VirtualBox"] move to workspace $ws9 focus
for_window [class="thunar|Thunar|pcmanfm"] move to workspace $ws8 focus
for_window [class="spotify|Spotify"] move to workspace $ws9 focus
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    position top

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done

    colors {
        statusline #ffffff
        background #323232
        inactive_workspace #32323200 #32323200 #5c5c5c
    }
}

include /etc/sway/config.d/*
